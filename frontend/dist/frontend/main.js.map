{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/forgotten-account/forgotten-account.component.css","webpack:///./src/app/forgotten-account/forgotten-account.component.html","webpack:///./src/app/forgotten-account/forgotten-account.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/homepage/homepage.component.css","webpack:///./src/app/homepage/homepage.component.html","webpack:///./src/app/homepage/homepage.component.ts","webpack:///./src/app/mainpage/mainpage.component.css","webpack:///./src/app/mainpage/mainpage.component.html","webpack:///./src/app/mainpage/mainpage.component.ts","webpack:///./src/app/password-reset/password-reset.component.css","webpack:///./src/app/password-reset/password-reset.component.html","webpack:///./src/app/password-reset/password-reset.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/shared/api.service.ts","webpack:///./src/app/shared/auth-guard.service.ts","webpack:///./src/app/shared/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {HomepageComponent} from './homepage/homepage.component';\nimport {MainpageComponent} from './mainpage/mainpage.component';\nimport {AuthGuardService} from './shared/auth-guard.service';\nimport {ForgottenAccountComponent} from './forgotten-account/forgotten-account.component';\nimport {PasswordResetComponent} from './password-reset/password-reset.component';\nimport {RegistrationComponent} from './registration/registration.component';\n\nconst routes: Routes = [\n  { path: '', component: HomepageComponent },\n  { path: 'home', component: MainpageComponent, canActivate: [AuthGuardService]},\n  { path: 'forgotten-account', component: ForgottenAccountComponent},\n  { path: 'password-reset', component: PasswordResetComponent },\n  { path: 'registration-complete', component: RegistrationComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!DOCTYPE html>\\n<html>\\n\\n<head>\\n  <meta charset=\\\"utf-8\\\">\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\" type=\\\"text/css\\\">\\n</head>\\n\\n<body>\\n<app-header></app-header>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n<script src=\\\"https://code.jquery.com/jquery-3.3.1.slim.min.js\\\" integrity=\\\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\\\" crossorigin=\\\"anonymous\\\"></script>\\n<script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\\\" integrity=\\\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\\\" crossorigin=\\\"anonymous\\\"></script>\\n<script src=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\\\" integrity=\\\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\\\" crossorigin=\\\"anonymous\\\"></script>\\n</body>\\n\\n</html>\\n\"","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'frontend';\n\n  ngOnInit(): void {\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatTooltipModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MainpageComponent } from './mainpage/mainpage.component';\nimport {ApiService} from './shared/api.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {AuthService} from './shared/auth.service';\nimport {AuthGuardService} from './shared/auth-guard.service';\nimport { ForgottenAccountComponent } from './forgotten-account/forgotten-account.component';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { RegistrationComponent } from './registration/registration.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomepageComponent,\n    MainpageComponent,\n    ForgottenAccountComponent,\n    PasswordResetComponent,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatTooltipModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [ApiService, AuthService, AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"py-5\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-9\\\">\\n        <p class=\\\"lead\\\">Sign up to our newsletter for the latest news</p>\\n        <form class=\\\"form-inline\\\" [formGroup]=\\\"subscribeForm\\\" (ngSubmit)=\\\"onSubmitSubscribe($event)\\\">\\n          <div class=\\\"form-group\\\">\\n            <input\\n              id=\\\"email-footer\\\" name=\\\"email-footer\\\"\\n              formControlName=\\\"email-footer\\\"\\n              type=\\\"text\\\" class=\\\"form-control\\\"\\n              placeholder=\\\"Your e-mail here\\\"\\n            >\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary ml-3\\\">\\n            Subscribe </button>\\n        </form>\\n      </div>\\n      <div class=\\\"col-4 col-md-1 align-self-center\\\"> <a href=\\\"#\\\">\\n        <i class=\\\"fa fa-fw fa-facebook text-muted fa-2x\\\"></i>\\n      </a> </div>\\n      <div class=\\\"col-4 col-md-1 align-self-center\\\"> <a href=\\\"#\\\">\\n        <i class=\\\"fa fa-fw fa-twitter text-muted fa-2x\\\"></i>\\n      </a> </div>\\n      <div class=\\\"col-4 col-md-1 align-self-center\\\"> <a href=\\\"#\\\">\\n        <i class=\\\"fa fa-fw fa-instagram text-muted fa-2x\\\"></i>\\n      </a> </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  subscribeForm: FormGroup;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.subscribeForm = new FormGroup({\n      'email-footer': new FormControl(null, [])\n    });\n  }\n\n\n  onSubmitSubscribe() {\n    console.log(this.subscribeForm);\n    this.subscribeForm.reset();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdHRlbi1hY2NvdW50L2ZvcmdvdHRlbi1hY2NvdW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\" style=\\\"background-color: whitesmoke ;background-size:cover;\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"bg-white p-5 mx-auto col-md-8 col-10\\\" style=\\\"opacity: 0.95\\\">\\n        <h2 class=\\\"mb-1 text-center\\\">\\n          <b *ngIf=\\\"emailHasBeenSend\\\">Email Sent!</b>\\n        </h2>\\n        <h4 *ngIf=\\\"emailHasBeenSend\\\" class=\\\"mb-3 text-center\\\" style=\\\"margin-top: 20px\\\">\\n          <span class=\\\"text-muted\\\">An email with the reset password link was sent to the email address in your profile.\\n            If you did not receive the email, verify that the user name is correct or contact the\\n            system administrator.\\n          </span>\\n        </h4>\\n        <h2 class=\\\"mb-1 text-center\\\">\\n          <b *ngIf=\\\"!emailHasBeenSend\\\">Find Your Account</b>\\n        </h2>\\n        <h4 class=\\\"mb-3 text-center\\\" *ngIf=\\\"!emailHasBeenSend\\\">\\n          Please enter your email address to send a reset password link for your account.\\n        </h4>\\n\\n        <form\\n          *ngIf=\\\"!emailHasBeenSend\\\"\\n          [formGroup]=\\\"forgottenAccountForm\\\"\\n          (ngSubmit)=\\\"onSubmitForgotten($event)\\\"\\n        >\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"emailForgotten\\\">\\n                E-mail:\\n              </label>\\n              <input\\n                [ngStyle]=\\\"{'border': errors.email ? '1px solid red' : ''}\\\"\\n                id=\\\"emailForgotten\\\" name=\\\"emailForgotten\\\"\\n                formControlName=\\\"emailForgotten\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\"\\n                placeholder=\\\"e-mail\\\"\\n              >\\n              <span style=\\\"color: red\\\">{{errors.email}}</span>\\n            </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 btn-block pt-2\\\">\\n            <h4><b>Send</b></h4>\\n          </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ApiService} from '../shared/api.service';\nimport {AuthService} from '../shared/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-forgotten-account',\n  templateUrl: './forgotten-account.component.html',\n  styleUrls: ['./forgotten-account.component.css']\n})\nexport class ForgottenAccountComponent implements OnInit {\n\n  forgottenAccountForm: FormGroup;\n  errors = {\n    email: null,\n  };\n  emailHasBeenSend = false;\n\n  constructor(private apiService: ApiService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.forgottenAccountForm = new FormGroup({\n      emailForgotten: new FormControl(null, [Validators.required, Validators.email])\n    });\n  }\n\n  onSubmitForgotten() {\n    const email = this.forgottenAccountForm.value.emailForgotten;\n    this.apiService.postPasswordReset(email).subscribe(\n      (response: any) => {\n        if (response.detail === 'Password reset e-mail has been sent.') {\n          this.emailHasBeenSend = true;\n        }\n      },\n      (error1 => {\n        this.errors = error1.error;\n        this.forgottenAccountForm.reset();\n      })\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-light\\\">\\n  <div style=\\\"margin-left: 50px\\\">\\n    <a class=\\\"navbar-brand text-primary\\\" [routerLink]=\\\"'/'\\\" href=\\\"#\\\">\\n      <i class=\\\"fa fa-paper-plane\\\"></i>\\n      <b> studHelper<br></b>\\n    </a>\\n  </div>\\n\\n  <!--If the user is not authenticated then show the form for log in on the header-->\\n  <form\\n    *ngIf=\\\"!authService.isUserAuthenticated()\\\"\\n    class=\\\"form-inline\\\"\\n    [formGroup]=\\\"signinForm\\\"\\n    (ngSubmit)=\\\"onSubmitSignin($event)\\\"\\n  >\\n    <div class=\\\"form-group\\\">\\n      <a class=\\\"nav-link\\\" [routerLink]=\\\"'/forgotten-account'\\\" href=\\\"#\\\" >Forgotten account?</a>\\n    </div>\\n    <div class=\\\"form-group\\\" style=\\\"margin-right: 10px\\\">\\n      <input\\n        [ngStyle]=\\\"{'border': errors.email || errors.non_field_errors ? '1px solid red' : ''}\\\"\\n        id=\\\"emailHeader\\\" name=\\\"emailHeader\\\"\\n        formControlName=\\\"emailHeader\\\"\\n        type=\\\"email\\\" class=\\\"form-control\\\"\\n        placeholder=\\\"e-mail\\\">\\n    </div>\\n    <div class=\\\"form-group\\\" style=\\\"margin-right: 10px\\\">\\n      <input\\n        [ngStyle]=\\\"{'border': errors.password || errors.non_field_errors ? '1px solid red' : ''}\\\"\\n        id=\\\"password\\\" name=\\\"password\\\"\\n        formControlName=\\\"password\\\"\\n        type=\\\"password\\\" class=\\\"form-control\\\"\\n        placeholder=\\\"********\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary \\\">Log in</button>\\n  </form>\\n\\n\\n\\n  <!--Else show the buttons for the site-->\\n  <ul class=\\\"nav\\\" *ngIf=\\\"authService.isUserAuthenticated()\\\">\\n    <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#\\\"><i class=\\\"fa fa-user\\\"></i> Profile</a> </li>\\n    <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#\\\"><i class=\\\"fa fa-cogs\\\"></i> Settings</a> </li>\\n    <li class=\\\"nav-item\\\"> <a class=\\\"nav-link\\\" href=\\\"#\\\"><i class=\\\"fa fa-file-text\\\"></i> Files</a> </li>\\n    <button (click)=\\\"onLogoutClicked()\\\" class=\\\"btn btn-primary \\\">Log out</button>\\n  </ul>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ApiService} from '../shared/api.service';\nimport {AuthService} from '../shared/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  signinForm: FormGroup;\n  errors = {\n    username: null,\n    password: null,\n    non_field_errors: null,\n  };\n\n  constructor(private apiService: ApiService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.signinForm = new FormGroup({\n      emailHeader: new FormControl(null, [Validators.required]),\n      password: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  onSubmitSignin() {\n    const email = this.signinForm.value.emailHeader;\n    const password = this.signinForm.value.password;\n    this.apiService.postLogInUser(email, password).subscribe(\n      (response: any) => {\n        this.authService.setTokenLocalStorage(response.key);\n        this.router.navigate(['/home']);\n        this.signinForm.reset();\n      },\n      (error1 => {\n        this.errors = error1.error;\n        console.log(error1);\n      })\n    );\n  }\n\n  onLogoutClicked() {\n    const token = this.authService.token;\n    this.authService.deleteTokenFromLocalStorage();\n    this.apiService.postLogOutUser(token).subscribe(\n      (response: any) => {\n        this.router.navigate(['/']);\n      },\n      (error1 => {\n        alert(error1);\n      })\n    );\n    this.router.navigate(['/']);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWVwYWdlL2hvbWVwYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\" style=\\\"background-image: url('https://stud-help.herokuapp.com/static/assets/img/book-cover.jpg') ;background-size:cover;\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"bg-white p-5 mx-auto col-md-8 col-10\\\" style=\\\"opacity: 0.95\\\">\\n        <div *ngIf=\\\"signupFormSubmitted\\\">\\n          <h2 class=\\\"mb-1 text-center\\\">\\n          <b>Thank you!</b>\\n        </h2>\\n        <h4 class=\\\"mb-3 text-center\\\">\\n          We've send a confirmation email to check the validity of the data you've entered. Please check your email and come back later!\\n        </h4>\\n        </div>\\n\\n        <div *ngIf=\\\"!signupFormSubmitted\\\">\\n        <h2 class=\\\"mb-1 text-center\\\">\\n          <b>Create an account!</b>\\n        </h2>\\n        <h4 class=\\\"mb-3 text-center\\\">\\n          It is free and it will always be that way!\\n        </h4>\\n        <form [formGroup]=\\\"signupForm\\\" (ngSubmit)=\\\"onSubmitRegister($event)\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"firstName\\\">\\n                First Name:\\n              </label>\\n              <input\\n                [ngStyle]=\\\"{'border': errors.first_name ? '1px solid red' : ''}\\\"\\n                id=\\\"firstName\\\" name=\\\"firstName\\\"\\n                formControlName=\\\"firstName\\\"\\n                class=\\\"form-control\\\" type=\\\"text\\\"\\n                placeholder=\\\"first name\\\"\\n              >\\n              <span style=\\\"color: red\\\">{{errors.first_name}}</span>\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"lastName\\\">\\n                Last Name:\\n              </label>\\n              <input\\n                [ngStyle]=\\\"{'border': errors.last_name ? '1px solid red' : ''}\\\"\\n                id=\\\"lastName\\\" name=\\\"lastName\\\"\\n                formControlName=\\\"lastName\\\"\\n                class=\\\"form-control\\\"  type=\\\"text\\\"\\n                placeholder=\\\"last name\\\">\\n              <span style=\\\"color: red\\\" *ngFor=\\\"let error of errors.last_name\\\">{{error}}</span>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\">\\n              Username:\\n            </label>\\n            <input\\n              [ngStyle]=\\\"{'border': errors.username ? '1px solid red' : ''}\\\"\\n              id=\\\"username\\\" name=\\\"username\\\"\\n              formControlName=\\\"username\\\"\\n              class=\\\"form-control\\\" type=\\\"text\\\"\\n              placeholder=\\\"username\\\">\\n            <span style=\\\"color: red\\\" *ngFor=\\\"let error of errors.username\\\">{{error}}</span>\\n          </div >\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"emailHomepage\\\">\\n              E-mail:\\n            </label>\\n            <input\\n              [ngStyle]=\\\"{'border': errors.email ? '1px solid red' : ''}\\\"\\n              id=\\\"emailHomepage\\\" name=\\\"emailHomepage\\\"\\n              formControlName=\\\"emailHomepage\\\"\\n              class=\\\"form-control\\\" type=\\\"text\\\"\\n              placeholder=\\\"e-mail\\\">\\n            <span style=\\\"color: red\\\" *ngFor=\\\"let error of errors.email\\\">{{error}}</span>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"passwordHomepage1\\\">\\n              Password:\\n            </label>\\n            <input\\n              [ngStyle]=\\\"{'border': errors.password1 ? '1px solid red' : ''}\\\"\\n              id=\\\"passwordHomepage1\\\" name=\\\"passwordHomepage1\\\"\\n              formControlName=\\\"passwordHomepage1\\\"\\n              type=\\\"password\\\" class=\\\"form-control\\\"\\n              placeholder=\\\"********\\\">\\n            <span style=\\\"color: red\\\" *ngFor=\\\"let error of errors.password1\\\">{{error}}</span>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"passwordHomepage2\\\">\\n              Confirm password:\\n            </label>\\n            <input\\n              [ngStyle]=\\\"{'border': errors.password2 ? '1px solid red' : ''}\\\"\\n              id=\\\"passwordHomepage2\\\" name=\\\"passwordHomepage2\\\"\\n              formControlName=\\\"passwordHomepage2\\\"\\n              type=\\\"password\\\" class=\\\"form-control\\\"\\n              placeholder=\\\"********\\\">\\n            <span style=\\\"color: red\\\" *ngFor=\\\"let error of errors.password2\\\">{{error}}</span>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 btn-block pt-2\\\">\\n            <h4><b>Create</b></h4>\\n          </button>\\n        </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ApiService} from '../shared/api.service';\nimport {error} from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  signupForm: FormGroup;\n  signupFormSubmitted = false;\n  errors = {\n    first_name: null,\n    last_name: null,\n    username: null,\n    password1: null,\n    password2: null,\n    email: null,\n  };\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.signupForm = new FormGroup({\n      firstName: new FormControl(null, [Validators.required]),\n      lastName: new FormControl(null, [Validators.required]),\n      username: new FormControl(null, [Validators.required]),\n      emailHomepage: new FormControl(null, [Validators.required, Validators.email]),\n      passwordHomepage1: new FormControl(null, [Validators.required]),\n      passwordHomepage2: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  onSubmitRegister() {\n    const email = this.signupForm.value.emailHomepage;\n    const firstName = this.signupForm.value.firstName;\n    const lastName = this.signupForm.value.lastName;\n    const username = this.signupForm.value.username;\n    const password1 = this.signupForm.value.passwordHomepage1;\n    const password2 = this.signupForm.value.passwordHomepage2;\n    console.log(email, firstName, lastName, username, password1, password2);\n    this.apiService.postRegisterUser(username, email, password1, password2, firstName, lastName).subscribe(\n      (response: Response) => {\n        this.signupFormSubmitted = true;\n      },\n      (error1 => {\n        this.errors = error1.error;\n      })\n    );\n    this.signupForm.reset();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW5wYWdlL21haW5wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  mainpage works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})\nexport class MainpageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bhc3N3b3JkLXJlc2V0L3Bhc3N3b3JkLXJlc2V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"py-5\\\" style=\\\"background-color: whitesmoke ;background-size:cover;\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"bg-white p-5 mx-auto col-md-8 col-10\\\" style=\\\"opacity: 0.95\\\">\\n        <h2 class=\\\"mb-1 text-center\\\">\\n          <b>You are almost done</b>\\n        </h2>\\n        <h4 class=\\\"mb-3 text-center\\\" *ngIf=\\\"!emailHasBeenSend\\\">\\n          Reset your password\\n        </h4>\\n\\n        <form\\n          [formGroup]=\\\"passwordReset\\\"\\n          (ngSubmit)=\\\"onSubmitPasswordReset($event)\\\"\\n        >\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"password1Reset\\\">\\n                Password:\\n              </label>\\n              <input\\n                [ngStyle]=\\\"{'border': errors.new_password1 ? '1px solid red' : ''}\\\"\\n                id=\\\"password1Reset\\\" name=\\\"password1Reset\\\"\\n                formControlName=\\\"password1Reset\\\"\\n                class=\\\"form-control\\\" type=\\\"password\\\"\\n                placeholder=\\\"*******\\\"\\n              >\\n              <span style=\\\"color: red\\\">{{errors.new_password1}}</span>\\n            </div>\\n              <div class=\\\"form-group col-md-6\\\">\\n                <label for=\\\"password2Reset\\\">\\n                  Confirm Password:\\n                </label>\\n                <input\\n                  [ngStyle]=\\\"{'border': errors.new_password2 ? '1px solid red' : ''}\\\"\\n                  id=\\\"password2Reset\\\" name=\\\"password2Reset\\\"\\n                  formControlName=\\\"password2Reset\\\"\\n                  class=\\\"form-control\\\" type=\\\"password\\\"\\n                  placeholder=\\\"*******\\\"\\n                >\\n              <span style=\\\"color: red\\\">{{errors.new_password2}}</span>\\n            </div>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary mt-4 btn-block pt-2\\\">\\n              <h4><b>Submit</b></h4>\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {ApiService} from '../shared/api.service';\nimport {AuthService} from '../shared/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-password-reset',\n  templateUrl: './password-reset.component.html',\n  styleUrls: ['./password-reset.component.css']\n})\nexport class PasswordResetComponent implements OnInit {\n\n  passwordReset: FormGroup;\n  token: string;\n  uid: string;\n  errors = {\n    new_password1: null,\n    new_password2: null,\n    token: null,\n    uid: null,\n  };\n\n  constructor(private apiService: ApiService,\n              private authService: AuthService,\n              private router: Router,\n              private route: ActivatedRoute) {\n    this.route.queryParams.subscribe(params => {\n      this.uid = params.ui;\n      this.token = params.token;\n    });\n  }\n\n  ngOnInit() {\n    this.passwordReset = new FormGroup({\n      password1Reset: new FormControl(null, []),\n      password2Reset: new FormControl(null, [])\n    });\n  }\n\n  onSubmitPasswordReset() {\n    const password1 = this.passwordReset.value.password1Reset;\n    const password2 = this.passwordReset.value.password2Reset;\n    this.apiService.postNewPassword(password1, password2, this.uid, this.token).subscribe(\n      (response: Response) => {\n        this.router.navigate(['/']);\n      },\n      (error1 => {\n        this.errors = error1.error;\n      })\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"py-5\\\" style=\\\"background-color: whitesmoke ;background-size:cover;\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"bg-white p-5 mx-auto col-md-8 col-10\\\" style=\\\"opacity: 0.95\\\">\\n        <h2 *ngIf=\\\"everythingWorkedOk\\\" class=\\\"mb-1 text-center\\\">\\n          <b>You're done!</b>\\n        </h2>\\n        <h4 *ngIf=\\\"everythingWorkedOk\\\" class=\\\"mb-3 text-center\\\" style=\\\"margin-top: 20px\\\">\\n          <span class=\\\"text-muted\\\">\\n            The account was successfully created.\\n          </span>\\n        </h4>\\n\\n        <h2 *ngIf=\\\"!everythingWorkedOk\\\" class=\\\"mb-1 text-center\\\">\\n          <b>Something went wrong!</b>\\n        </h2>\\n        <h4 *ngIf=\\\"!everythingWorkedOk\\\" class=\\\"mb-3 text-center\\\" style=\\\"margin-top: 20px\\\">\\n          <span class=\\\"text-muted\\\">\\n            Please contact us at stud.helper.email@gmail.com to solve the issue. Thank you!\\n          </span>\\n        </h4>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ApiService} from \"../shared/api.service\";\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  token: string = null;\n  everythingWorkedOk = true;\n\n  constructor(private route: ActivatedRoute,\n              private apiService: ApiService) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.token = params.token;\n      this.apiService.postRegistrationAccountConfirmEmail(this.token).subscribe(\n          (response: any) => {\n            console.log(response);\n          },\n          (error1 => {\n            this.everythingWorkedOk = false;\n            console.log(error1);\n          })\n      );\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable()\nexport class ApiService {\n  apiLink = 'http://stud-help.herokuapp.com/';\n  constructor(private http: HttpClient) {}\n\n  postRegisterUser(username: string, email: string, password1: string, password2: string, firstName: string, lastName: string) {\n    return this.http.post(this.apiLink + 'auth/registration/', {\n      username,\n      email,\n      password1,\n      password2,\n      first_name: firstName,\n      last_name: lastName\n    });\n  }\n\n  postLogInUser(email: string, password: string) {\n    return this.http.post(this.apiLink + 'auth/login/', {\n      email, password\n    });\n  }\n\n  postLogOutUser(token: string) {\n    return this.http.post(this.apiLink + 'auth/logout/', {\n      token,\n    });\n  }\n\n  postPasswordReset(email: string) {\n    return this.http.post(this.apiLink + 'auth/password/reset/', {\n      email,\n    });\n  }\n\n  postNewPassword(new_password1: string, new_password2: string, uid: string, token: string) {\n    return this.http.post(this.apiLink + 'auth/password/reset/confirm/', {\n      new_password1,\n      new_password2,\n      uid,\n      token,\n    });\n  }\n\n  postRegistrationAccountConfirmEmail(token: string) {\n    return this.http.post(this.apiLink + 'auth/registration/account-confirm-email/' + token + '/', {});\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(private authService: AuthService,\n              private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n  token: string = null;\n\n  setTokenLocalStorage(token: string) {\n    localStorage.setItem('authToken', token);\n    this.token = token;\n  }\n\n  deleteTokenFromLocalStorage() {\n    localStorage.removeItem('authToken');\n    this.token = null;\n  }\n\n  isUserAuthenticated() {\n    if (this.token === null) {\n      const token = localStorage.getItem('authToken');\n      if (token === null) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}